{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gjaischool1\\\\Desktop\\\\morgorithm\\\\react-project\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport React from \"react\";\nimport \"../components/Header.css\";\nimport aronWhite from \"../image/aronWhite.png\";\nimport iconLogout from \"../image/iconLogout.svg\";\n\n// 임시 데이터 (axios 후 삭제 예정)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = {\n  id: '20231031',\n  pw: 'test1031!',\n  name: '정혜빈',\n  job: '의사'\n};\nconst Header = () => {\n  _s();\n  // job, name 상태 업데이트하는 state\n  const [job, setJob] = useState('');\n  const [name, setName] = useState('');\n\n  // 자동 로그아웃을 위한 state ,초 단위로 60분 설정 (즉, 초기값을 3600초로 설정)\n  // time은 로그아웃까지 남은시간을 저장하는 상태\n  const [time, setTime] = useState(60 * 60);\n\n  // 컴포넌트 렌더링 될 때마다 특정 작업 수행\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // const response = await axios.get('/api/user(API요청임시주소)');\n        // setJob(response.data.job);\n        // setName(response.data.name);\n        setJob(User.job);\n        setName(User.name);\n      } catch (error) {\n        console.error('데이터 불러오기 실패', error);\n      }\n    };\n    fetchData();\n    // 빈 배열 --> 처음 렌더링 될 때만 실행\n  }, []);\n\n  // setInterval --> 첫 번째 인자로 전달된 함수를 두 번째 인자로 전달된 시간 간격마다 반복 실행\n  // 1초마다 남은 시간 감소 \n  useEffect(() => {\n    const timerId = setInterval(() => {\n      setTime(prevTime => prevTime - 1);\n    }, 1000);\n    return () => {\n      clearInterval(timerId); // 컴포넌트 언마운트 시 타이머 제거\n    };\n  }, []);\n  useEffect(() => {\n    if (time === 0) {\n      // time 상태가 0 이되면 로그아웃 처리되는 로직 작성하기\n      alert('로그아웃 되었습니다');\n    }\n  }, [time]);\n\n  // formatTime --> 초 단위로 표현된 시간을 mm:ss형식의 문자열로 변환하는 함수\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    // minutes가 10보다 작으면 앞에 0을 붙여서 '01', '02' 이런식으로 표기, 10보다 크면 그대로 표기\n    // seconds도 마찬가지\n    return `${minutes < 10 ? `0${minutes}` : minutes} : ${seconds < 10 ? `0${seconds}` : seconds}`;\n  };\n\n  // 로그아웃/아이콘 을 누르면 세션스토리지 id로 저장된 item을 삭제하고, 로그인페이지로 이동시킴\n  const onLogout = () => {\n    //sessionStorage에 id로 저장되어있는 item을 삭제함\n    sessionStorage.removeItem('id');\n    // 로그인페이지로 이동\n    document.location.href = '로그인페이지주소';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: aronWhite,\n        alt: \"\\uB85C\\uACE0\",\n        className: \"header-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uB2F4\\uB2F9\", job, \" [\", name, \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"login-time\",\n            children: formatTime(time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logout-wrapper\",\n            onClick: onLogout,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logout-content\",\n              children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-logout-wrap\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: iconLogout,\n                className: \"icon-logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"iaaVN6/FhINW02wPQjPxyTcF4xg=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useState","useEffect","axios","React","aronWhite","iconLogout","jsxDEV","_jsxDEV","User","id","pw","name","job","Header","_s","setJob","setName","time","setTime","fetchData","error","console","timerId","setInterval","prevTime","clearInterval","alert","formatTime","minutes","Math","floor","seconds","onLogout","sessionStorage","removeItem","document","location","href","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gjaischool1/Desktop/morgorithm/react-project/src/components/Header.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport React from \"react\";\r\nimport \"../components/Header.css\";\r\nimport aronWhite from \"../image/aronWhite.png\";\r\nimport iconLogout from \"../image/iconLogout.svg\"\r\n\r\n// 임시 데이터 (axios 후 삭제 예정)\r\nconst User = {\r\n  id: '20231031',\r\n  pw: 'test1031!',\r\n  name: '정혜빈',\r\n  job: '의사'\r\n}\r\n\r\nconst Header = () => {\r\n\r\n  // job, name 상태 업데이트하는 state\r\n  const [job, setJob] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  // 자동 로그아웃을 위한 state ,초 단위로 60분 설정 (즉, 초기값을 3600초로 설정)\r\n  // time은 로그아웃까지 남은시간을 저장하는 상태\r\n  const [time, setTime] = useState(60 * 60);\r\n\r\n  // 컴포넌트 렌더링 될 때마다 특정 작업 수행\r\n  useEffect(()=>{\r\n    const fetchData = async () => {\r\n      try {\r\n        // const response = await axios.get('/api/user(API요청임시주소)');\r\n        // setJob(response.data.job);\r\n        // setName(response.data.name);\r\n        setJob(User.job);\r\n        setName(User.name);\r\n      } catch (error) {\r\n        console.error('데이터 불러오기 실패', error)\r\n      }\r\n    };\r\n    fetchData();\r\n    // 빈 배열 --> 처음 렌더링 될 때만 실행\r\n  },[])\r\n\r\n  // setInterval --> 첫 번째 인자로 전달된 함수를 두 번째 인자로 전달된 시간 간격마다 반복 실행\r\n  // 1초마다 남은 시간 감소 \r\n  useEffect(()=>{\r\n    const timerId = setInterval(()=>{\r\n      setTime(prevTime => prevTime - 1);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timerId) // 컴포넌트 언마운트 시 타이머 제거\r\n    }\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    if(time === 0){\r\n      // time 상태가 0 이되면 로그아웃 처리되는 로직 작성하기\r\n      alert('로그아웃 되었습니다');\r\n    }\r\n  },[time]);\r\n\r\n  // formatTime --> 초 단위로 표현된 시간을 mm:ss형식의 문자열로 변환하는 함수\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time/60);\r\n    const seconds = time % 60;\r\n    // minutes가 10보다 작으면 앞에 0을 붙여서 '01', '02' 이런식으로 표기, 10보다 크면 그대로 표기\r\n    // seconds도 마찬가지\r\n    return `${minutes < 10 ? `0${minutes}` : minutes} : ${seconds < 10 ? `0${seconds}` : seconds}`;\r\n  }\r\n\r\n  // 로그아웃/아이콘 을 누르면 세션스토리지 id로 저장된 item을 삭제하고, 로그인페이지로 이동시킴\r\n  const onLogout = () => {\r\n    //sessionStorage에 id로 저장되어있는 item을 삭제함\r\n    sessionStorage.removeItem('id')\r\n    // 로그인페이지로 이동\r\n    document.location.href = '로그인페이지주소'\r\n  }\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <div className=\"header-content\">\r\n        <img src={aronWhite} alt=\"로고\" className=\"header-logo\" />\r\n        <ul>\r\n          <li>\r\n            <span>담당{job} [{name}]</span>\r\n          </li>\r\n          <li>\r\n            <span className=\"login-time\">{formatTime(time)}</span>\r\n          </li>\r\n          <li>\r\n            <div className=\"logout-wrapper\" onClick={onLogout}>\r\n              <span className=\"logout-content\">로그아웃</span>\r\n              <button className=\"icon-logout-wrap\"><img src={iconLogout} className=\"icon-logout\"></img></button>\r\n            </div>\r\n          </li>\r\n          {/* <li>\r\n            <button className=\"icon-logout-wrap\"><img src={iconLogout} className=\"icon-logout\"></img></button>\r\n          </li> */}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}