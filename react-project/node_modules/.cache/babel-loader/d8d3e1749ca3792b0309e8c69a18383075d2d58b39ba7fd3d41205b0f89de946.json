{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gjaischool1\\\\Desktop\\\\morgorithm\\\\react-project\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport React from \"react\";\nimport \"../components/Header.css\";\nimport aronWhite from \"../image/aronWhite.png\";\n// import logoutIcon from \"../image/logoutIcon.png\"\n\n// 임시 데이터 (axios 후 삭제 예정)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = {\n  id: '20231031',\n  pw: 'test1031!',\n  name: '정혜빈',\n  job: '의사'\n};\nconst Header = () => {\n  _s();\n  // job, name 상태 업데이트하는 state\n  const [job, setJob] = useState('');\n  const [name, setName] = useState('');\n\n  // 자동 로그아웃을 위한 state ,초 단위로 60분 설정\n  const [time, setTime] = useState(60 * 60);\n\n  // 컴포넌트 렌더링 될 때마다 특정 작업 수행\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // const response = await axios.get('/api/user(API요청임시주소)');\n        // setJob(response.data.job);\n        // setName(response.data.name);\n        setJob(User.job);\n        setName(User.name);\n      } catch (error) {\n        console.error('데이터 불러오기 실패', error);\n      }\n    };\n    fetchData();\n    // 빈 배열 --> 처음 렌더링 될 때만 실행\n  }, []);\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      setTime(prevTime => prevTime - 1); // 1초마다 남은 시간 감소\n    }, 1000);\n    return () => {\n      clearInterval(timeId); // 컴포넌트 언마운트 시 타이머 제거\n    };\n  }, []);\n  useEffect(() => {\n    if (time === 0) {\n      // 로그아웃 처리 로직\n      alert('로그아웃 되었습니다');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: aronWhite,\n        alt: \"\\uB85C\\uACE0\",\n        className: \"header-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uB2F4\\uB2F9\", job, \" [\", name, \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"60:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"iaaVN6/FhINW02wPQjPxyTcF4xg=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useState","useEffect","axios","React","aronWhite","jsxDEV","_jsxDEV","User","id","pw","name","job","Header","_s","setJob","setName","time","setTime","fetchData","error","console","timerId","setInterval","prevTime","clearInterval","timeId","alert","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gjaischool1/Desktop/morgorithm/react-project/src/components/Header.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport React from \"react\";\r\nimport \"../components/Header.css\";\r\nimport aronWhite from \"../image/aronWhite.png\";\r\n// import logoutIcon from \"../image/logoutIcon.png\"\r\n\r\n// 임시 데이터 (axios 후 삭제 예정)\r\nconst User = {\r\n  id: '20231031',\r\n  pw: 'test1031!',\r\n  name: '정혜빈',\r\n  job: '의사'\r\n}\r\n\r\nconst Header = () => {\r\n\r\n  // job, name 상태 업데이트하는 state\r\n  const [job, setJob] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  // 자동 로그아웃을 위한 state ,초 단위로 60분 설정\r\n  const [time, setTime] = useState(60 * 60);\r\n\r\n  // 컴포넌트 렌더링 될 때마다 특정 작업 수행\r\n  useEffect(()=>{\r\n    const fetchData = async () => {\r\n      try {\r\n        // const response = await axios.get('/api/user(API요청임시주소)');\r\n        // setJob(response.data.job);\r\n        // setName(response.data.name);\r\n        setJob(User.job);\r\n        setName(User.name);\r\n      } catch (error) {\r\n        console.error('데이터 불러오기 실패', error)\r\n      }\r\n    };\r\n    fetchData();\r\n    // 빈 배열 --> 처음 렌더링 될 때만 실행\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    const timerId = setInterval(()=>{\r\n      setTime(prevTime => prevTime - 1); // 1초마다 남은 시간 감소\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timeId) // 컴포넌트 언마운트 시 타이머 제거\r\n    }\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    if(time === 0){\r\n      // 로그아웃 처리 로직\r\n      alert('로그아웃 되었습니다')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <div className=\"header-content\">\r\n        <img src={aronWhite} alt=\"로고\" className=\"header-logo\" />\r\n        <ul>\r\n          <li>\r\n            <span>담당{job} [{name}]</span>\r\n          </li>\r\n          <li>\r\n            <span>60:00</span>\r\n          </li>\r\n          <li>\r\n            <span>로그인</span>\r\n          </li>\r\n          {/* <li>\r\n            <img src={logoutIcon}></img>\r\n          </li> */}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}